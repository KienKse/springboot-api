package br.com.ks.service;

import br.com.ks.model.Carta;
import br.com.ks.repository.CartaRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

@Service
public class CartaService {

    private static final Logger LOGGER = LoggerFactory.getLogger(CartaService.class);

    @Autowired // This means to get the bean called cartaRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CartaRepository cartaRepository;

    public List<Carta> getAll() {
        LOGGER.debug("Obtendo cartas");
        return cartaRepository.findAll();
    }

    public Carta addNewCarta(Carta request) {

        Carta carta = new Carta(request);

        return cartaRepository.save(carta);
    }

    public List<Carta> getCartaByPeriodo(LocalDate inicio, LocalDate fim) {
        List<Long> ids = cartaRepository.findByInterval(inicio, fim);

        return cartaRepository.findAllById(ids);
    }

    public Carta getCartaById(Long carId) {
        return cartaRepository.findById(carId)
                .orElseThrow(() -> new br.com.solutis.gamechanger.controller.ResourceNotFoundException("CARTA", "id", carId));
    }

    public void deleteCarta(Long carId) {
        Carta carta = getCartaById(carId);

        cartaRepository.delete(carta);
    }

    // RESOLVE - FIX UPDATE
    public ResponseEntity<Object> updateCarta(Carta cartaDetails, Long carId) {
        Optional<Carta> cartaOptional = cartaRepository.findById(carId);

        if(!cartaOptional.isPresent()) {
            return ResponseEntity.notFound().build();
        }

        cartaDetails.setId(carId);

        cartaRepository.save(cartaDetails);

        return ResponseEntity.noContent().build();
    }



}